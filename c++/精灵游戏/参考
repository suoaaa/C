# include "acllib.h"
# include <windows.h>
# include <math.h>
# include <time.h>
# include <stdio.h>
# include <direct.h>
# include <string.h>

# define PI 3.141592953
# define GRAY RGB(160, 160, 160)
# define ANTIQUE_WHITE RGB(250,235,215)

# define WINDOW_WIDTH 200
# define WINDOW_HEIGHT 200
# define DIAL_RADIUS 90

int timerflag = 0;

typedef enum {
    TIMER_booting,
    TIMER_working,
    TIMER_shutting,
    TIMER_free,
}TIMER_STAT;

void timerEvent(int tid);
void picture_a_minute(int tid);
void keyEvent(int key, int event);

int Setup()
{
    initWindow("MyWindow", DEFAULT, DEFAULT, WINDOW_WIDTH, WINDOW_HEIGHT);
    registerTimerEvent(timerEvent);
   
    return 0;
}

void keyEvent(int key, int event)
{
    if (key == VK_SPACE) {
        if      ((timerflag == TIMER_working) && (event == KEY_DOWN)) {
            timerflag = TIMER_shutting;
            cancelTimer(0);
        }
        else if ((timerflag == TIMER_shutting) && (event == KEY_UP)) {
            timerflag = TIMER_free;
        }
        else if ((timerflag == TIMER_free) && (event == KEY_DOWN)) {
            timerflag = TIMER_booting;
            startTimer(0, 100);
        }
        else if ((timerflag == TIMER_booting) && (event == KEY_UP)) {
            timerflag = TIMER_working;
        }
    }
}

void timerEvent(int tid)
{
    picture_a_minute(tid);
}
